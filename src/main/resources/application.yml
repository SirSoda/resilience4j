spring:
  application:
    name: resilience4j
server:
  port: 8004
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka


# resilience4j 重试配置 aop式
resilience4j.retry:
  retryAspectOrder: 399 # 优先级
  backends: # 配置不同的重试策略
    retryBackendA: #策略名称
      maxRetryAttempts: 3 #最大重试次数
      waitDuration: 600 # 下次重试等待时间
      eventConsumerBufferSize: 1
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      enableRandomizedWait: false
      randomizedWaitFactor: 2
      retryExceptionPredicate: com.yonyou.resilience4j.RecordFailurePredicate #什么样的异常会被认定是请求失败
      retryExceptions:
        - java.io.IOException # 需要重试的异常
      ignoreExceptions:
        - com.yonyou.resilience4j.IgnoredException #被忽略的异常

# 断路器配置
resilience4j.circuitbreaker:
  circuitBreakerAspectOrder: 400 #优先级 越小优先级越高
  backends:
    backendA:
      ringBufferSizeInClosedState: 5 # 断路器关闭状态 环形缓冲区大小
      ringBufferSizeInHalfOpenState: 3 #断路器半开状态 环形缓冲区大小
      waitInterval: 5000 #断路器从open状态到half open需要的时间
      failureRateThreshold: 50 #故障阈值百分比
      eventConsumerBufferSize: 10
      registerHealthIndicator: true
      recordFailurePredicate: com.yonyou.resilience4j.RecordFailurePredicate
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
      ignoreExceptions:
        - org.springframework.web.client.HttpClientErrorException

 #限流配置 aop方式
resilience4j.ratelimiter:
  limiters:
    backendA:
      limitForPeriod: 1 #请求频次的阈值
      limitRefreshPeriodInMillis: 5000 #频次刷新的周期
      timeoutInMillis: 5000  #许可期的超时时间
      subscribeForEvents: true
      registerHealthIndicator: true
      eventConsumerBufferSize: 100